// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}


model userEntity {
  id        Int      @id @default(autoincrement())
  name      String
  email     String   @unique
  isActive  Boolean  @default(true)
  rol     String   @default("user")
  password  String
  created_at DateTime @default(now())
  updated_at DateTime @default(now())
}


model Department {
  id         Int      @id @default(autoincrement())
  name       String
  carnet Carnets[]
  created_at DateTime @default(now())
  updated_at DateTime @default(now())
}



model Civil_statuses{
  id         Int      @id @default(autoincrement())
    name       String
    //carnet Carnets[]
    created_at DateTime @default(now())
    updated_at DateTime @default(now())
}

model State{
    id         Int      @id @default(autoincrement())
    name       String
    carnet Carnets[]
    //municipalities Municipalities[]
    created_at DateTime @default(now())
    updated_at DateTime @default(now())
}

model Municipalities{
  id         Int      @id @default(autoincrement())
    name       String
    //state    State? @relation(fields: [id_state], references: [id])
    //id_state  Int?
    //parishes Parishes[]
    created_at DateTime @default(now())
    updated_at DateTime @default(now())
}

model Parishes{
    id         Int      @id @default(autoincrement())
    name       String
    //municipalities    Municipalities? @relation(fields: [id_municipalitie], references: [id])
    //id_municipalitie  Int?
    created_at DateTime @default(now())
    updated_at DateTime @default(now())
}

model Charge{
  id         Int      @id @default(autoincrement())
    name       String
    carnet Carnets[]
    created_at DateTime @default(now())
    updated_at DateTime @default(now())
}

model Type_creations{
  id         Int      @id @default(autoincrement())
    name       String
    //carnet Carnets[]
    carnet    Carnets? @relation(fields: [id_carnet], references: [id])
    id_carnet  Int?
    created_at DateTime @default(now())
    updated_at DateTime @default(now())
}

model Textures{
  id         Int      @id @default(autoincrement())
    name       String
    //carnet Carnets[]
    created_at DateTime @default(now())
    updated_at DateTime @default(now())
}

model Status{
  id         Int      @id @default(autoincrement())
    name       String
    carnet Carnets[]
    created_at DateTime @default(now())
    updated_at DateTime @default(now())
}

model Skin_colors{
  id         Int      @id @default(autoincrement())
    name       String
    //carnet Carnets[]
    created_at DateTime @default(now())
    updated_at DateTime @default(now())
}

model Genders{
  id         Int      @id @default(autoincrement())
    name       String
    //carnet Carnets[]
    created_at DateTime @default(now())
    updated_at DateTime @default(now())
}

model Hair_colors{
  id         Int      @id @default(autoincrement())
    name       String
    //carnet Carnets[]
    created_at DateTime @default(now())
    updated_at DateTime @default(now())
}


model Access_levels{
  id         Int      @id @default(autoincrement())
    name       String
    carnet Carnets[]
    created_at DateTime @default(now())
    updated_at DateTime @default(now())
}


 

model Carnets {
    id        Int      @id @default(autoincrement())
    name String?
    lastname String?
    card_code String?
    expiration DateTime
    note String?
    cedule String?
    extent String?
    address String?
    phone String?
    cellpone String?
    photo String?
    qr String?

    department    Department? @relation(fields: [id_department], references: [id])
    id_department  Int?
    

    charge    Charge? @relation(fields: [id_charge], references: [id])
    id_charge  Int?


    //type_creations    Type_creations? @relation(fields: [id_type_creations], references: [id])
    //id_type_creations  Int?
    type_creations    Type_creations[]



    //textures    Textures? @relation(fields: [id_textures], references: [id])
    //id_textures  Int?

    status    Status? @relation(fields: [id_status], references: [id])
    id_status  Int?

    access_levels    Access_levels? @relation(fields: [id_access_levels], references: [id])
    id_access_levels  Int?

    //genders    Genders? @relation(fields: [id_genders], references: [id])
    //id_genders  Int?

    //hair_colors    Hair_colors? @relation(fields: [id_hair_colors], references: [id])
    //id_hair_colors  Int?

    state    State? @relation(fields: [id_state], references: [id])
    id_state  Int?
    
    municipalities String?
    parishes String?
    
    //skin_colors    Skin_colors? @relation(fields: [id_skin_colors], references: [id])
    //id_skin_colors  Int?

    //civil_statuses    Civil_statuses? @relation(fields: [id_civil_statuses], references: [id])
    //id_civil_statuses  Int?


    created_at DateTime @default(now())
    updated_at DateTime @default(now())
}

